Apr 11 06:20:14 s-nskrt-msapp01 nginx[182810]: nginx: [alert] failed to load the 'resty.core' module (https://github.com/openresty/lua-resty-core); ensure you are using an OpenResty release from https:>
Apr 11 06:20:14 s-nskrt-msapp01 nginx[182810]:         no field package.preload['resty.core']
Apr 11 06:20:14 s-nskrt-msapp01 nginx[182810]:         no file './resty/core.lua'
Apr 11 06:20:14 s-nskrt-msapp01 nginx[182810]:         no file '/usr/local/share/luajit-2.1/resty/core.lua'
Apr 11 06:20:14 s-nskrt-msapp01 nginx[182810]:         no file '/usr/local/share/lua/5.1/resty/core.lua'
Apr 11 06:20:14 s-nskrt-msapp01 nginx[182810]:         no file '/usr/local/share/lua/5.1/resty/core/init.lua'
Apr 11 06:20:14 s-nskrt-msapp01 nginx[182810]:         no file './resty/core.so'
Apr 11 06:20:14 s-nskrt-msapp01 nginx[182810]:         no file '/usr/local/lib/lua/5.1/resty/core.so'
Apr 11 06:20:14 s-nskrt-msapp01 nginx[182810]:         no file '/usr/local/lib/lua/5.1/loadall.so'
Apr 11 06:20:14 s-nskrt-msapp01 nginx[182810]:         no file './resty.so'
Apr 11 06:20:14 s-nskrt-msapp01 nginx[182810]:         no file '/usr/local/lib/lua/5.1/resty.so'
Apr 11 06:20:14 s-nskrt-msapp01 nginx[182810]:         no file '/usr/local/lib/lua/5.1/loadall.so') in /usr/local/nginx/conf/nginx.conf:61
Apr 11 06:20:14 s-nskrt-msapp01 systemd[1]: nginx.service: Control process exited, code=exited, status=1/FAILURE
Apr 11 06:20:14 s-nskrt-msapp01 systemd[1]: nginx.service: Failed with result 'exit-code'.
Apr 11 06:20:14 s-nskrt-msapp01 systemd[1]: Failed to start nginx.service - A high performance web server and a reverse proxy server.


cd /usr/local/share/lua/5.1
mkdir -p resty

curl -L https://raw.githubusercontent.com/openresty/lua-resty-core/master/lib/resty/core.lua -o resty/core.lua
curl -L https://raw.githubusercontent.com/openresty/lua-resty-lrucache/master/lib/resty/lrucache.lua -o resty/lrucache.lua

lua_package_path "/usr/local/share/lua/5.1/?.lua;/usr/local/share/lua/5.1/?/init.lua;;";




wget https://github.com/openresty/luajit2/archive/refs/tags/v2.1-20250117.tar.gz
tar -xzvf v2.1-20250117.tar.gz
cd luajit2-2.1-20250117
make
sudo make install


# Скачиваем исходники Nginx
RUN curl -LO http://nginx.org/download/nginx-1.22.1.tar.gz && \
    tar -xzvf nginx-1.22.1.tar.gz

# Скачиваем модуль ngx_http_lua_module
RUN git clone https://github.com/openresty/lua-nginx-module.git

# Сборка Nginx с LuaJIT
WORKDIR nginx-1.22.1
RUN ./configure --prefix=/usr/local/nginx --add-module=/lua-nginx-module && \
    make && \
    make install


export LUAJIT_LIB=/usr/local/lib
export LUAJIT_INC=/usr/local/include/luajit-2.1

./configure --prefix=/usr/local/nginx --add-module=./lua-nginx-module \
    --with-ld-opt="-L/usr/local/lib" \
    --with-cc-opt="-I/usr/local/include/luajit-2.1" \
    --with-http_ssl_module

server {
    listen 8080;

    set $redirect_uri "";

    location / {
        proxy_pass https://console-openshift-console.apps.okd4bank.rtk.okdp.app.bcs;
        proxy_ssl_verify off;
        proxy_set_header Host console-openshift-console.apps.okd4bank.rtk.okdp.app.bcs;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_redirect off;

        header_filter_by_lua_block {
            local body = ngx.arg[1]
            if body then
                body = ngx.re.sub(body, "https://console%-openshift%-console%.apps%.okd4bank%.rtk%.okdp%.app%.bcs", "http://127.0.0.1:8080", "jo")
                body = ngx.re.sub(body, "https://oauth%-openshift%.apps%.okd4bank%.rtk%.okdp%.app%.bcs", "http://127.0.0.1:8080/oauth", "jo")
                body = ngx.re.sub(body, "redirect_uri=https%%3A%%2F%%2Fconsole%-openshift%-console%.apps%.okd4bank%.rtk%.okdp%.app%.bcs%%2Fauth%%2Fcallback", "redirect_uri=http%%3A%%2F%%2F127.0.0.1%%2Fauth%%2Fcallback", "jo")
                ngx.arg[1] = body
            end
        }

        body_filter_by_lua_block {
            local chunk = ngx.arg[1]
            if chunk then
                chunk = ngx.re.sub(chunk, "https://console%-openshift%-console%.apps%.okd4bank%.rtk%.okdp%.app%.bcs", "http://127.0.0.1:8080", "jo")
                chunk = ngx.re.sub(chunk, "https://oauth%-openshift%.apps%.okd4bank%.rtk%.okdp%.app%.bcs", "http://127.0.0.1:8080/oauth", "jo")
                chunk = ngx.re.sub(chunk, "redirect_uri=https%%3A%%2F%%2Fconsole%-openshift%-console%.apps%.okd4bank%.rtk%.okdp%.app%.bcs%%2Fauth%%2Fcallback", "redirect_uri=http%%3A%%2F%%2F127.0.0.1%%2Fauth%%2Fcallback", "jo")
                ngx.arg[1] = chunk
            end
        }
    }

    location /oauth/ {
        proxy_pass https://oauth-openshift.apps.okd4bank.rtk.okdp.app.bcs;
        proxy_ssl_verify off;
        proxy_set_header Host oauth-openshift.apps.okd4bank.rtk.okdp.app.bcs;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_redirect off;
    }
}



